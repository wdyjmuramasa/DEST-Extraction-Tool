/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package examples;

import java.io.FileWriter;
import java.io.IOException;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
/**
 *
 * @author Regular Vahn
 */
public class Handlertable extends javax.swing.JFrame {

    String[] info = new String[5];
    
    public Handlertable(String[] dbInfo) {
        this.requestFocusInWindow();
        info = dbInfo;
        initComponents();
        try{
        HandlerinitComponents();
        }catch(Exception e)
        {
            this.dispose();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableViewer = new javax.swing.JTable();
        buttonCSV = new javax.swing.JButton();
        buttonExit = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        Textareacustomquery = new javax.swing.JTextArea();
        Buttongenerate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableViewer.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableViewer.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tableViewer);

        buttonCSV.setText("Convert to CSV");
        buttonCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCSVActionPerformed(evt);
            }
        });

        buttonExit.setText("Exit");
        buttonExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonExitActionPerformed(evt);
            }
        });

        Textareacustomquery.setColumns(20);
        Textareacustomquery.setRows(5);
        jScrollPane2.setViewportView(Textareacustomquery);

        Buttongenerate.setText("Generate Custom Table");
        Buttongenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtongenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(buttonCSV)
                        .addGap(187, 187, 187)
                        .addComponent(Buttongenerate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonExit)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 251, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCSV)
                    .addComponent(buttonExit)
                    .addComponent(Buttongenerate))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    String
            host,
            dbName,
            username,
            password,
            url,
            query;
    
    private void HandlerinitComponents(){
        try
   {    
       host = info[0];
       dbName = info[1];
       username = info[2];
       password = info[3];
       query = info[4];
       url = info[5];
            
            Class.forName("com.mysql.jdbc.Driver");
       Connection conn = DriverManager.getConnection(url);
       
           
       Statement stat = conn.createStatement();
       ResultSet result=stat.executeQuery(query);
               
        tableViewer.setModel(DbUtils.resultSetToTableModel(result));
       
       conn.close();
       System.out.println("Success");
   }
   catch(ClassNotFoundException e)
   {
       System.out.println("Class not found!");
   }
   catch(SQLException e)
   {
       System.out.println(e);
       JOptionPane.showMessageDialog(source, "SQL Error, Error in Handlertable : " + e, "SQL Error", JOptionPane.ERROR_MESSAGE);
       this.dispose();
   }
    }
    
    private void buttonCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCSVActionPerformed
       try{
        exportTabletoCSV(tableViewer);
        JOptionPane.showMessageDialog(source, "Table converted to csv File.", "Export to CSV", JOptionPane.INFORMATION_MESSAGE);
        }
        catch(Exception e) {
            JOptionPane.showMessageDialog(source, "Something went wrong that is not handled. Debugging is advised", "Export Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_buttonCSVActionPerformed

    private void buttonExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonExitActionPerformed

        Mainmenu menu = new Mainmenu();
        menu.setVisible(true);
        menu.requestFocusInWindow();
        menu.setLocationRelativeTo(null);
        this.dispose();
        
    }//GEN-LAST:event_buttonExitActionPerformed

    private void ButtongenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtongenerateActionPerformed
        try
   {    
       host = info[0];
       dbName = info[1];
       username = info[2];
       password = info[3];
       query = Textareacustomquery.getText();
       url = info[5];
            
            Class.forName("com.mysql.jdbc.Driver");
       Connection conn = DriverManager.getConnection(url);
       
           
       Statement stat = conn.createStatement();
       ResultSet result=stat.executeQuery(query);
               
        tableViewer.setModel(DbUtils.resultSetToTableModel(result));
       
       conn.close();
       System.out.println("Success");
   }
   catch(ClassNotFoundException e)
   {
       System.out.println("Class not found!");
   }
   catch(SQLException e)
   {
       System.out.println(e);
       JOptionPane.showMessageDialog(source, "SQL Error, Error in Handlertable : " + e, "SQL Error", JOptionPane.ERROR_MESSAGE);
       this.dispose();
   }
    }//GEN-LAST:event_ButtongenerateActionPerformed

    /**
     * @param args the command line arguments
     */
     public JTable source;
    String cellData;
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Handlertable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Handlertable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Handlertable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Handlertable.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

            }
        });
    }
    
    public void exportTabletoCSV (JTable table) {
    DefaultTableModel dtm = (DefaultTableModel) table.getModel();
    int nRow = dtm.getRowCount(), nCol = dtm.getColumnCount();
    Object[][] tableData = new Object[nRow][nCol];
    Object[] tableHead = new Object[nCol];
    try{
    for (int k = 0;k<nCol ;k++){
        tableHead[k] = dtm.getColumnName(k);}
    }
    catch(Exception e)
            {
                JOptionPane.showMessageDialog(source, "Error in populating headers", "Export Error", JOptionPane.ERROR_MESSAGE);
            }
    try{
    for (int i = 0 ; i < nRow ; i++){
        for (int j = 0 ; j< nCol ; j++){
            tableData[i][j] = dtm.getValueAt(i,j);
    }
    }
    }
    catch(Exception e)
            {
                JOptionPane.showMessageDialog(source, "Error in populating Table", "Export Error", JOptionPane.ERROR_MESSAGE);
            }
    try
    {
        
  FileWriter writer = new FileWriter("OutputCSV.csv");
            for(int y = 0;y<dtm.getColumnCount();y++){
            cellData = tableHead[y].toString();
	    writer.append(cellData);
            if(y!=dtm.getColumnCount()-1)
            {
            writer.append(',');
            }
                }
	    writer.append('\n');
            
            for(int x = 0;x<dtm.getRowCount();x++){
                for(int y = 0;y<dtm.getColumnCount();y++){
            cellData = tableData[x][y].toString();
	    writer.append(cellData);
            if(y!=dtm.getColumnCount()-1)
            {
            writer.append(',');
            }
                }
	    writer.append('\n');
            }
 
	    writer.flush();
	    writer.close();
	}
	catch(IOException e)
	{
	     e.printStackTrace();
	} 
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Buttongenerate;
    private javax.swing.JTextArea Textareacustomquery;
    private javax.swing.JButton buttonCSV;
    private javax.swing.JButton buttonExit;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableViewer;
    // End of variables declaration//GEN-END:variables
}
